c
Wine.count
c
Wine.count
c
Wine.count
c
page.body
c
Wine.last.name
page.body
Wine.count
c
Wine.last
Wine.find_by_name('Vel quas velit expedita consequatur aut alias neque.')
Wine.find_by_name('Vel quas velit expedita consequatur aut alias neque')
Wine.find_by_name('Vel quas velit expedita consequatur aut alias')
Wine.all[-20]
Wine.all[-120]
Wine.all[-19]
Wine.all[-18]
Wine.all[-17]
Wine.all[-16]
Wine.all[-15]
Wine.all[-2]
Wine.all[-1]
Wine.all[-3]
Wine.all[-4]
Wine.all[-3]
Wine.all[-6]
Wine.all[-9]
Wine.all[-12]
Wine.all[-11]
Wine.all[-10]
Wine.all[-8]
Wine.all[-7]
Wine.all[-6]
Wine.all[-4]
Wine.all[-5]
Wine.last
Wine.first
page.html
c
Wine.last
page.body
page.html
page.visit
page.methods
page.content
page
exit
expect(page).to have_content(Wine.all[-6].name)
page
  find("//*[li]")
Wine.count
Wine.all
Wine.all[-7]
Wine.all[-6]
Wine.all[-5]
Wine.all[-4]
Wine.all[-3]
Wine.all[-2]
Wine.last
c
wine["PriceMax"]
wine["PriceMin"]
c
wine["PriceMax"]
wine["PriceMin"]
c
wine["PriceMin"]
wine["PriceMax"]
c
wine["PriceMax"]
wine["PriceMin"]
c
wine["PriceMin"]
wine["PriceMax"]
c
wine["PriceMin"]
wine["PriceMax"]
c
wine["PriceMax"]
wine["PriceMin"]
c
wine["PriceMin"]
wine["PriceMax"]
c
wine["PriceMax"]
wine["PriceMin"]
c
wine["PriceMin"]
wine["PriceMax"]
wine["PriceMin"]
c
wine["PriceMax"]
wine["PriceMin"]
c
wine["PriceMax"]
wine["PriceMin"]
c
wine["PriceMax"]
wine["PriceMin"]
c
wine["PriceMax"]
wine["PriceMin"]
c
wine["PriceMax"]
wine["PriceMin"]
c
wine["PriceMax"]
wine["PriceMin"]
c
wine["PriceMax"]
wine["PriceMin"]
c
n
nn
n
sn
s
wine["PriceMax"]
wine["PriceMin"]
c
99.99 >= 99.99
wine["PriceMax"]
wine["PriceMin"]
wine
c
wine
c
@wine
c
@wine
c
wines_api_form
c
fetched.errors
s
fetched.wines.length == 0
c
fetched.wines.length == 0
fetched.wines.length
fetched.wines
c
fetched.wines
c
ENV
JSON.parse(RestClient.get "http://services.wine.com/api/beta2/service.svc/json/catalog?search=&filter=price(20|25)&offset=0&size=5&state=NY&apikey=0334d46958c54bd467ac866e09805a4e")
JSON.parse(RestClient.get "http://services.wine.com/api/beta2/service.svc/json/catalog?search=&filter=price(20|25)&offset=0&size=5&state=NY&apikey=apikey=0334d46958c54bd467ac866e09805a4e")
JSON.parse(RestClient.get "http://services.wine.com/api/beta2/service.svc/json/catalog?search=&filter=price(20|25)&offset=0&size=5&state=NY&apikey=apikey=0334d46958c54bd467ac866e09805a4e"
fetched.wines
c
@query_string
c
@errors
c
@query_string
c
@errors
c
@pricemax
@errors
c
fetched.wines.length
fetched.length
c
@query_string
c
fetched.wines.length
c
@size
@query_string
c
fetched.wines
c
fetched.wines
featch.wines
c
wines
c
wines
c
@query_string
@errors
c
fetched
c
wines
@query_string
c
@types
@search_query
c
@query_string
wines
c
@query_string
c
@price_min
@search_params
c
@price_min
c
"#{a}"
"a"
a
a = 9999
"#{9999}"
c
"".to_i
"a".empty?
"".empty?
puts true if ""
@search_params
search_query
c
params
ENV
exit
ENV
ENV['WINE_API_KEY']
c
Figaro.env.wine_api_key?
Figaro.env
Figaro.method
Figaro.key
Figaro
c
c\
ENV
ENv
ENV["wine_api_key"]
c
ENV
ENV['wine_api_key']
exit
ENV['wine_api_key']
c
ENV['WINE_API_KEY']
ENV
ENv
exit
ENV
ENV['WINE_API_KEY']
WINE_API_KEY
c
ENV['WINE_API_KEY']
ENV['WINE_API_'KEY']
ENV
c
params
c
@wine.errors.full_messages.to_sentence
@wine.errors.full_messages
@wine.errors
